name: 🔒 Security Scanning

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # 🔍 CodeQL Analysis
  codeql:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🏗️ Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # 🔒 Dependency Security Scan
  dependency-scan:
    name: 🔒 Dependency Security
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔍 Run npm audit
        run: npm audit --audit-level=moderate

      - name: 🔒 Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: 📊 Upload Snyk Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  # 🔐 Secret Scanning
  secret-scan:
    name: 🔐 Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # 🛡️ License Compliance
  license-scan:
    name: 🛡️ License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 📜 Generate License Report
        run: |
          npx license-checker --production --csv > license-report.csv

      - name: 📊 Upload License Report
        uses: actions/upload-artifact@v3
        with:
          name: license-report
          path: license-report.csv

      - name: 🔍 Check License Compatibility
        run: |
          # Check for problematic licenses
          if grep -E "(GPL-2.0|GPL-3.0|AGPL)" license-report.csv; then
            echo "❌ Found GPL/AGPL licenses that may cause issues"
            exit 1
          fi
          echo "✅ All licenses are compatible"

  # 🚨 Security Alerts
  security-alerts:
    name: 🚨 Security Alerts
    runs-on: ubuntu-latest
    needs: [codeql, dependency-scan, secret-scan]
    if: failure()
    steps:
      - name: 📧 Send Security Alert
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: '🚨 Y Monitor Security Alert'
          body: |
            Security vulnerability detected in Y Monitor repository.
            
            Workflow: ${{ github.workflow }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            
            Please review the security findings immediately.
          to: ${{ secrets.SECURITY_EMAIL }}
          from: Y Monitor Security <${{ secrets.EMAIL_USERNAME }}>

      - name: 📬 Slack Security Alert
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#y-monitor-security'
          text: '🚨 Security vulnerability detected! Please check GitHub Actions.'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}