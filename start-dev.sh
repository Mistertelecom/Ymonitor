#!/bin/bash

# Y-Monitor Development Startup Script
# Este script inicia o projeto Y-Monitor em modo desenvolvimento

echo "üöÄ Iniciando Y-Monitor em modo desenvolvimento..."
echo "========================================="

# Verificar se o Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n√£o est√° instalado. Por favor, instale o Node.js 18+ antes de continuar."
    exit 1
fi

# Verificar se o npm est√° instalado
if ! command -v npm &> /dev/null; then
    echo "‚ùå npm n√£o est√° instalado. Por favor, instale o npm antes de continuar."
    exit 1
fi

# Verificar vers√£o do Node.js
NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "‚ùå Node.js vers√£o 18 ou superior √© necess√°ria. Vers√£o atual: $(node --version)"
    exit 1
fi

echo "‚úÖ Node.js $(node --version) encontrado"
echo "‚úÖ npm $(npm --version) encontrado"

# Verificar se existe package.json
if [ ! -f "package.json" ]; then
    echo "‚ùå package.json n√£o encontrado. Certifique-se de estar no diret√≥rio raiz do projeto."
    exit 1
fi

# Instalar depend√™ncias se node_modules n√£o existir
if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando depend√™ncias..."
    npm install
    if [ $? -ne 0 ]; then
        echo "‚ùå Erro ao instalar depend√™ncias."
        exit 1
    fi
    echo "‚úÖ Depend√™ncias instaladas com sucesso"
fi

# Verificar se existe turbo.json
if [ ! -f "turbo.json" ]; then
    echo "‚ùå turbo.json n√£o encontrado. Este projeto requer Turbo."
    exit 1
fi

# Criar diret√≥rio de logs se n√£o existir
mkdir -p apps/api/logs

# Verificar se os arquivos de configura√ß√£o existem
if [ ! -f "apps/api/prisma/schema.prisma" ]; then
    echo "‚ö†Ô∏è  Arquivo prisma/schema.prisma n√£o encontrado. Certifique-se de configurar o banco de dados."
fi

# Verificar se existe arquivo .env
if [ ! -f ".env" ] && [ ! -f "apps/api/.env" ]; then
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado. Certifique-se de configurar as vari√°veis de ambiente."
    echo "   Exemplo de vari√°veis necess√°rias:"
    echo "   - DATABASE_URL"
    echo "   - JWT_SECRET"
    echo "   - PORT=3006"
    echo "   - CORS_ORIGIN=http://localhost:3005"
fi

echo ""
echo "üéØ Configura√ß√£o das portas:"
echo "   - Web: http://localhost:3005"
echo "   - API: http://localhost:3006"
echo "   - Documenta√ß√£o: http://localhost:3006/api"
echo ""

# Perguntar se deseja iniciar os servi√ßos
echo "Deseja iniciar os servi√ßos agora? (y/n)"
read -r response

if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo "üöÄ Iniciando servi√ßos..."
    echo "   - Pressione Ctrl+C para parar os servi√ßos"
    echo "   - Os logs ser√£o exibidos abaixo"
    echo ""
    
    # Iniciar em modo desenvolvimento usando turbo
    npm run dev
else
    echo "üìù Para iniciar os servi√ßos manualmente, execute:"
    echo "   npm run dev"
    echo ""
    echo "üìö Outros comandos √∫teis:"
    echo "   npm run build       # Compilar projeto"
    echo "   npm run test        # Executar testes"
    echo "   npm run lint        # Verificar c√≥digo"
    echo "   npm run docker:dev  # Iniciar com Docker"
fi

echo ""
echo "‚úÖ Script conclu√≠do!"